name: CLIMADA CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
jobs:
  build:
    environment: 
      name: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        env:
          HDX_KEY: ${{ secrets.HDX_BOT_SCRAPERS_API_TOKEN }}
          HDX_SITE: prod
          USER_AGENT: ${{ vars.USER_AGENT }}
          PREPREFIX: ${{ vars.PREPREFIX }}
        run: |
          sudo apt-add-repository ppa:ubuntugis/ubuntugis-unstable
          sudo apt-get update
          sudo apt-get install gdal-bin libgdal-dev
          pip install GDAL==`gdal-config --version`
          python -m pip install --upgrade pip
          make install
          python src/hdx_scraper_climada/download_admin_geometries_from_hdx.py
          python src/hdx_scraper_climada/download_gwp_population.py
      - name: Analysing the code with pylint
        run: |
          make lint
      - name: Running unit tests
        env:
            HDX_KEY_STAGE: ${{ secrets.HDX_KEY_STAGE }}
            HDX_KEY: ${{ secrets.HDX_BOT_SCRAPERS_API_TOKEN }}
            HDX_SITE: ${{ vars.HDX_SITE }}
            USER_AGENT: ${{ vars.USER_AGENT }}
            PREPREFIX: ${{ vars.PREPREFIX }}
            NASA_EARTHDATA_USERNAME: ${{ vars.NASA_EARTHDATA_USERNAME }}
            NASA_EARTHDATA_PASSWORD: ${{ secrets.NASA_EARTHDATA_PASSWORD }}
        run: |
          make github_tests